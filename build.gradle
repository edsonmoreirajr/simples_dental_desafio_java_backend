plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
}

group = 'com.simplesdental'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-parent:3.1.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springframework.hateoas:spring-hateoas:2.1.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jeasy:easy-random-core:5.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}

test {
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.9"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, excludes: [
					"com/simplesdental/desafiojavabackend/config/*",
					"com/simplesdental/dto/desafiojavabackend/*",
					"com/simplesdental/entity/desafiojavabackend/*"
			])
		}))
	}
}